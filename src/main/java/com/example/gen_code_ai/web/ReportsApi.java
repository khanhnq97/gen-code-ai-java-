/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.gen_code_ai.web;

import com.example.gen_code_ai.dto.PopularMovie;
import com.example.gen_code_ai.dto.ReportsAttendanceGet200Response;
import com.example.gen_code_ai.dto.ReportsRevenueGet200Response;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-07-19T00:56:02.813115+07:00[Asia/Ho_Chi_Minh]")
@Validated
@Tag(name = "Reports", description = "the Reports API")
public interface ReportsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /reports/attendance : Get movie attendance report
     * Generates a report summarizing movie attendance data
     *
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "reportsAttendanceGet",
        summary = "Get movie attendance report",
        description = "Generates a report summarizing movie attendance data",
        tags = { "Reports" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ReportsAttendanceGet200Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/reports/attendance",
        produces = { "application/json" }
    )
    default ResponseEntity<ReportsAttendanceGet200Response> reportsAttendanceGet(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"totalAttendance\" : 0.8008281904610115, \"attendanceByMovie\" : { \"key\" : 6.027456183070403 } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /reports/popular-movies : Get list of popular movies
     * Generates a list of the most popular movies based on attendance
     *
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "reportsPopularMoviesGet",
        summary = "Get list of popular movies",
        description = "Generates a list of the most popular movies based on attendance",
        tags = { "Reports" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = PopularMovie.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/reports/popular-movies",
        produces = { "application/json" }
    )
    default ResponseEntity<List<PopularMovie>> reportsPopularMoviesGet(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"attendanceCount\" : 6.027456183070403, \"movieId\" : 0, \"movieTitle\" : \"movieTitle\" }, { \"attendanceCount\" : 6.027456183070403, \"movieId\" : 0, \"movieTitle\" : \"movieTitle\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /reports/revenue : Get revenue report
     * Generates a report summarizing revenue data
     *
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "reportsRevenueGet",
        summary = "Get revenue report",
        description = "Generates a report summarizing revenue data",
        tags = { "Reports" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ReportsRevenueGet200Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/reports/revenue",
        produces = { "application/json" }
    )
    default ResponseEntity<ReportsRevenueGet200Response> reportsRevenueGet(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"revenueByMovie\" : { \"key\" : 6.027456183070403 }, \"totalRevenue\" : 0.8008281904610115 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
